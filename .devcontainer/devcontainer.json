// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.241.1/containers/python-3
{
	"name": "ArcFace TF2",
	"build": {
		"dockerfile": "Dockerfile",
		"context": "..",
		"args": {
			// Update 'VARIANT' to pick a Python version: 3, 3.10, 3.9, 3.8, 3.7, 3.6
			// Append -bullseye or -buster to pin to an OS version.
			// Use -bullseye variants on local on arm64/Apple Silicon.
			"VARIANT": "3.9",
			// Options
			"NODE_VERSION": "lts/*"
		}
	},
	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": {
				"python.defaultInterpreterPath": "/usr/local/bin/python",
				"python.linting.enabled": true,
				"python.linting.pylintEnabled": true,
				"python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
				"python.formatting.blackPath": "/usr/local/py-utils/bin/black",
				"python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
				"python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
				"python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
				"python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
				"python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
				"python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
				"python.linting.pylintPath": "/usr/local/py-utils/bin/pylint",
				"python.sortImports.args": [
					"--line-width",
					"120",
					"-p",
					"app"
				],
				"editor.rulers": [
					120
				],
				"python.linting.pylintArgs": [
					"--enable=F,E,C,R",
					"--disable=E1101,C0111, W0105",
					"--max-line-length=120"
				],
				"python.formatting.autopep8Args": [
					"--ignore",
					"E70",
					"--max-line-length",
					"120",
				],
				"[python]": {
					"editor.codeActionsOnSave": {
						"source.organizeImports": true
					}
				},
				"files.insertFinalNewline": true,
				"files.trimTrailingWhitespace": true,
				"[markdown]": {
					"files.trimTrailingWhitespace": false,
					"editor.renderWhitespace": "boundary"
				},
				"[plaintext]": {
					"files.trimTrailingWhitespace": false,
					"editor.renderWhitespace": "boundary"
				},
				"autoDocstring.docstringFormat": "numpy",
				"python.testing.pytestArgs": [
					"test"
				],
				"python.testing.unittestEnabled": false,
				"python.testing.nosetestsEnabled": false,
				"python.testing.pytestEnabled": true
			},
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"ms-python.python",
				"ms-python.vscode-pylance",
				"donjayamanne.githistory",
				"eamodio.gitlens",
				"njpwerner.autodocstring",
				"esbenp.prettier-vscode",
				"coenraads.bracket-pair-colorizer",
				"saikou9901.evilinspector",
				"streetsidesoftware.code-spell-checker",
				"gruntfuggly.todo-tree",
				"ionutvmi.path-autocomplete",
				"ms-azuretools.vscode-docker",
				"mtxr.sqltools",
				"mtxr.sqltools-driver-pg",
				"ms-vsliveshare.vsliveshare",
				"GitHub.copilot"
			]
		}
	},
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "pip3 install --user -r requirements.txt",
	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",
	"mounts": ["source=/home/yuki/data/retinaface-tf2/faces,target=/data/faces,type=bind,consistency=cached"]
}
